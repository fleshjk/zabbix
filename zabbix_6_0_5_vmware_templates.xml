<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.0</version>
    <date>2022-06-10T21:26:11Z</date>
    <groups>
        <group>
            <uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid>
            <name>Templates/Applications</name>
        </group>
        <group>
            <uuid>36bff6c29af64692839d077febfc7079</uuid>
            <name>Templates/Network devices</name>
        </group>
    </groups>
    <templates>
        <template>
            <uuid>56079badd056419383cc26e6a4fcc7e0</uuid>
            <template>VMware</template>
            <name>VMware_template</name>
            <description>You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>5ce209f4d94f460488a74a92a52d92b1</uuid>
                    <name>VMware: Event log</name>
                    <type>SIMPLE</type>
                    <key>vmware.eventlog[{$VMWARE.URL},skip]</key>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Collect VMware event log. See also: https://www.zabbix.com/documentation/6.0/manual/config/items/preprocessing/examples#filtering_vmware_event_log_records</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>log</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ee2edadb8ce943ef81d25dbbba8667a4</uuid>
                    <name>VMware: Full name</name>
                    <type>SIMPLE</type>
                    <key>vmware.fullname[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware service full name.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a0ec9145f2234fbea79a28c57ebdb44d</uuid>
                    <name>VMware: Version</name>
                    <type>SIMPLE</type>
                    <key>vmware.version[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware service version.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>16ffc933cce74cf28a6edf306aa99782</uuid>
                    <name>Discover VMware clusters</name>
                    <type>SIMPLE</type>
                    <key>vmware.cluster.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of clusters</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>46111f91dd564a459dbc1d396e2e6c76</uuid>
                            <name>VMware: Status of "{#CLUSTER.NAME}" cluster</name>
                            <type>SIMPLE</type>
                            <key>vmware.cluster.status[{$VMWARE.URL},{#CLUSTER.NAME}]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware cluster status.</description>
                            <valuemap>
                                <name>VMware status</name>
                            </valuemap>
                            <tags>
                                <tag>
                                    <tag>cluster</tag>
                                    <value>{#CLUSTER.NAME}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>cluster</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>8fb6a45cbe074b0cb6df53758e2c6623</uuid>
                    <name>Discover VMware datastores</name>
                    <type>SIMPLE</type>
                    <key>vmware.datastore.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>4b61838ba4c34e709b25081ae5b059b5</uuid>
                            <name>VMware: Average read latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.read[{$VMWARE.URL},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Amount of time for a read operation from the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5355c401dc244bc588ccd18767577c93</uuid>
                            <name>VMware: Free space on datastore {#DATASTORE} (percentage)</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.size[{$VMWARE.URL},{#DATASTORE},pfree]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in percentage from total.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>84f13c4fde2d4a17baaf0c8c1eb4f2c0</uuid>
                            <name>VMware: Total size of datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.size[{$VMWARE.URL},{#DATASTORE}]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in bytes.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>540cd0fbc56c4b8ea19f2ff5839ce00d</uuid>
                            <name>VMware: Average write latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.write[{$VMWARE.URL},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Amount of time for a write operation to the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>a5bc075e89f248e7b411d8f960897a08</uuid>
                    <name>Discover VMware hypervisors</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of hypervisors.</description>
                    <host_prototypes>
                        <host_prototype>
                            <uuid>051a1469d4d045cbbf818fcc843a352e</uuid>
                            <host>{#HV.UUID}</host>
                            <name>{#HV.NAME}</name>
                            <group_links>
                                <group_link>
                                    <group>
                                        <name>Templates/Applications</name>
                                    </group>
                                </group_link>
                            </group_links>
                            <group_prototypes>
                                <group_prototype>
                                    <name>{#CLUSTER.NAME}</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#DATACENTER.NAME}</name>
                                </group_prototype>
                            </group_prototypes>
                            <templates>
                                <template>
                                    <name>VMware Hypervisor</name>
                                </template>
                            </templates>
                            <macros>
                                <macro>
                                    <macro>{$VMWARE.HV.UUID}</macro>
                                    <value>{#HV.UUID}</value>
                                    <description>UUID of hypervisor.</description>
                                </macro>
                            </macros>
                            <custom_interfaces>YES</custom_interfaces>
                            <interfaces>
                                <interface>
                                    <ip>{#HV.IP}</ip>
                                </interface>
                            </interfaces>
                        </host_prototype>
                    </host_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>9fd559f4e88c4677a1b874634dd686f5</uuid>
                    <name>Discover VMware VMs</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of guest virtual machines.</description>
                    <host_prototypes>
                        <host_prototype>
                            <uuid>23b9ae9d6f33414880db1cb107115810</uuid>
                            <host>{#VM.UUID}</host>
                            <name>{#VM.NAME}</name>
                            <group_links>
                                <group_link>
                                    <group>
                                        <name>Templates/Applications</name>
                                    </group>
                                </group_link>
                            </group_links>
                            <group_prototypes>
                                <group_prototype>
                                    <name>{#CLUSTER.NAME} (vm)</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#DATACENTER.NAME}/{#VM.FOLDER} (vm)</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#HV.NAME}</name>
                                </group_prototype>
                            </group_prototypes>
                            <templates>
                                <template>
                                    <name>VMware Guest</name>
                                </template>
                            </templates>
                            <macros>
                                <macro>
                                    <macro>{$VMWARE.VM.UUID}</macro>
                                    <value>{#VM.UUID}</value>
                                    <description>UUID of guest virtual machine.</description>
                                </macro>
                            </macros>
                            <custom_interfaces>YES</custom_interfaces>
                            <interfaces>
                                <interface>
                                    <ip>{#VM.IP}</ip>
                                </interface>
                            </interfaces>
                        </host_prototype>
                    </host_prototypes>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>software</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$VMWARE.PASSWORD}</macro>
                    <description>VMware service {$USERNAME} user password</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.URL}</macro>
                    <description>VMware service (vCenter or ESX hypervisor) SDK URL (https://servername/sdk)</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.USERNAME}</macro>
                    <description>VMware service user name</description>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>3c59c22905054d42ac4ee8b72fe5f270</uuid>
                    <name>VMware status</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>gray</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>green</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>yellow</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>red</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
        <template>
            <uuid>ca02e82e6c414d0aa7aedc8d78468a49</uuid>
            <template>VMware FQDN</template>
            <name>VMware FQDN</name>
            <description>You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>64b8a28c1a904540930ebfec5af04872</uuid>
                    <name>VMware: Event log</name>
                    <type>SIMPLE</type>
                    <key>vmware.eventlog[{$VMWARE.URL},skip]</key>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Collect VMware event log. See also: https://www.zabbix.com/documentation/6.0/manual/config/items/preprocessing/examples#filtering_vmware_event_log_records</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>log</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ebb8417eceb541b1b51909c745642f05</uuid>
                    <name>VMware: Full name</name>
                    <type>SIMPLE</type>
                    <key>vmware.fullname[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware service full name.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>edfdedd78e9c4c299a1555bd13b2f677</uuid>
                    <name>VMware: Version</name>
                    <type>SIMPLE</type>
                    <key>vmware.version[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware service version.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>dc0a844c06f7456b8643f9f9672e6b8e</uuid>
                    <name>Discover VMware clusters</name>
                    <type>SIMPLE</type>
                    <key>vmware.cluster.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of clusters</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>41fbb29592f9495e92d88240ce2ba7a5</uuid>
                            <name>VMware: Status of "{#CLUSTER.NAME}" cluster</name>
                            <type>SIMPLE</type>
                            <key>vmware.cluster.status[{$VMWARE.URL},{#CLUSTER.NAME}]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware cluster status.</description>
                            <valuemap>
                                <name>VMware status</name>
                            </valuemap>
                            <tags>
                                <tag>
                                    <tag>cluster</tag>
                                    <value>{#CLUSTER.NAME}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>cluster</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>3cd02594ee644dbe88bdfc4f4257ae05</uuid>
                    <name>Discover VMware datastores</name>
                    <type>SIMPLE</type>
                    <key>vmware.datastore.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>0ed09f26cbad4d96bea297da4215d73b</uuid>
                            <name>VMware: Average read latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.read[{$VMWARE.URL},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Amount of time for a read operation from the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>a2b1785fc773404e9ce69bcd868c5b88</uuid>
                            <name>VMware: Free space on datastore {#DATASTORE} (percentage)</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.size[{$VMWARE.URL},{#DATASTORE},pfree]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in percentage from total.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>78fb4b4b0eec44a99207f8354773269d</uuid>
                            <name>VMware: Total size of datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.size[{$VMWARE.URL},{#DATASTORE}]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in bytes.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>d9570c0822cc4996a7dda1ddb9426404</uuid>
                            <name>VMware: Average write latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.datastore.write[{$VMWARE.URL},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Amount of time for a write operation to the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>988bb85b325449b29780eeda15c73620</uuid>
                    <name>Discover VMware hypervisors</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of hypervisors.</description>
                    <host_prototypes>
                        <host_prototype>
                            <uuid>51cf7ea3e6a74f7e8dde628dbc5347a3</uuid>
                            <host>{#HV.UUID}</host>
                            <name>{#HV.NAME}</name>
                            <group_links>
                                <group_link>
                                    <group>
                                        <name>Templates/Applications</name>
                                    </group>
                                </group_link>
                            </group_links>
                            <group_prototypes>
                                <group_prototype>
                                    <name>{#CLUSTER.NAME}</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#DATACENTER.NAME}</name>
                                </group_prototype>
                            </group_prototypes>
                            <templates>
                                <template>
                                    <name>VMware Hypervisor</name>
                                </template>
                            </templates>
                            <macros>
                                <macro>
                                    <macro>{$VMWARE.HV.UUID}</macro>
                                    <value>{#HV.UUID}</value>
                                    <description>UUID of hypervisor.</description>
                                </macro>
                            </macros>
                            <custom_interfaces>YES</custom_interfaces>
                            <interfaces>
                                <interface>
                                    <ip>{#HV.IP}</ip>
                                </interface>
                            </interfaces>
                        </host_prototype>
                    </host_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>a7e2f6830442433cbe515e8bd72ee0b8</uuid>
                    <name>Discover VMware VMs FQDN</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.discovery[{$VMWARE.URL}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#VM.DNS}</macro>
                                <value>^$</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery of guest virtual machines.</description>
                    <host_prototypes>
                        <host_prototype>
                            <uuid>a12e25c500a14fcf99295c207371ca1b</uuid>
                            <host>{#VM.DNS}</host>
                            <name>{#VM.NAME}</name>
                            <group_links>
                                <group_link>
                                    <group>
                                        <name>Templates/Applications</name>
                                    </group>
                                </group_link>
                            </group_links>
                            <group_prototypes>
                                <group_prototype>
                                    <name>{#CLUSTER.NAME} (vm)</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#DATACENTER.NAME}/{#VM.FOLDER} (vm)</name>
                                </group_prototype>
                                <group_prototype>
                                    <name>{#HV.NAME}</name>
                                </group_prototype>
                            </group_prototypes>
                            <templates>
                                <template>
                                    <name>VMware Guest</name>
                                </template>
                            </templates>
                            <macros>
                                <macro>
                                    <macro>{$VMWARE.VM.UUID}</macro>
                                    <value>{#VM.UUID}</value>
                                    <description>UUID of guest virtual machine.</description>
                                </macro>
                            </macros>
                            <custom_interfaces>YES</custom_interfaces>
                            <interfaces>
                                <interface>
                                    <ip>{#VM.IP}</ip>
                                </interface>
                            </interfaces>
                        </host_prototype>
                    </host_prototypes>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>software</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware-fqdn</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$VMWARE.PASSWORD}</macro>
                    <description>VMware service {$USERNAME} user password</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.URL}</macro>
                    <description>VMware service (vCenter or ESX hypervisor) SDK URL (https://servername/sdk)</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.USERNAME}</macro>
                    <description>VMware service user name</description>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>5e5e3b01ef334bd39441568ebd0c31c0</uuid>
                    <name>VMware status</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>gray</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>green</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>yellow</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>red</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
        <template>
            <uuid>7942fb93ae3b47cf9ca0ea4beb0675ce</uuid>
            <template>VMware Guest</template>
            <name>VMware Guest</name>
            <description>Template tooling version used: 0.41</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>061eed2d40d5427092b50172ea0a9c41</uuid>
                    <name>VMware: Cluster name</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cluster.name[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Cluster name of the guest VM.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cluster</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>31389342688f4b0696a49431923a528f</uuid>
                    <name>VMware: CPU latency in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.latency[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Percentage of time the virtual machine is unable to run because it is contending for access to the physical CPU(s).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>bbfb146e74144160b2e47c0f2cdc6c20</uuid>
                    <name>VMware: Number of virtual CPUs</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.num[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Number of virtual CPUs assigned to the guest.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>f4d72109b7ee4e0bb65aab1de85b6b05</uuid>
                    <name>VMware: CPU readiness latency in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.readiness[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Percentage of time that the virtual machine was ready, but could not get scheduled to run on the physical CPU.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ff0a31df94784cfbbf10deca55f76145</uuid>
                    <name>VMware: CPU ready</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.ready[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>ms</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Time that the virtual machine was ready, but could not get scheduled to run on the physical CPU during last measurement interval (VMware vCenter/ESXi Server performance counter sampling interval - 20 seconds)</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>50de05f27f33425cb207a3fdece7ecb1</uuid>
                    <name>VMware: CPU swap-in latency in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.swapwait[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Percentage of CPU time spent waiting for swap-in.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>50606be978814b51b4bae54340965cdc</uuid>
                    <name>VMware: CPU usage in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.usage.perf[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>CPU usage as a percentage during the interval.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ea416ff054cc4031ac6b5cf446156540</uuid>
                    <name>VMware: CPU usage</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.cpu.usage[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>Hz</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Current upper-bound on CPU usage. The upper-bound is based on the host the virtual machine is current running on, as well as limits configured on the virtual machine itself or any parent resource pool. Valid while the virtual machine is running.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3e70b5d443b942db974b5f92a7acce19</uuid>
                    <name>VMware: Datacenter name</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.datacenter.name[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Datacenter name of the guest VM.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>datacenter</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e645130999db470fbbf14a8055c95b23</uuid>
                    <name>VMware: Guest memory swapped</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.guest.memory.size.swapped[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Amount of guest physical memory that is swapped out to the swap space.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>521a0396514845e3bc5d3dc54ec3d940</uuid>
                    <name>VMware: Uptime of guest OS</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.guest.osuptime[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>uptime</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Total time elapsed since the last operating system boot-up (in seconds).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>da703e83e2e146569c173fd9bc6988dd</uuid>
                            <expression>last(/VMware Guest/vmware.vm.guest.osuptime[{$VMWARE.URL},{$VMWARE.VM.UUID}])&lt;10m</expression>
                            <name>VMware: VM has been restarted</name>
                            <event_name>VMware: VM has been restarted (uptime &lt; 10m)</event_name>
                            <priority>WARNING</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>fedec469a1d040ae971e0013102e1e7c</uuid>
                    <name>VMware: Hypervisor name</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.hv.name[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Hypervisor name of the guest VM.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>hypervisor</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>fbe7477fd85a4ee39a9226b2c6995446</uuid>
                    <name>VMware: Ballooned memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.ballooned[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of guest physical memory that is currently reclaimed through the balloon driver.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9e7b9360e4d84e9397b5f0a7ab074726</uuid>
                    <name>VMware: Compressed memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.compressed[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of memory currently in the compression cache for this VM.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>04a40f805fed4ddfa1590274a996a019</uuid>
                    <name>VMware: Host memory consumed</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.consumed[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Amount of host physical memory consumed for backing up guest physical memory pages.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6563409185804ed89b49dfde92edfa10</uuid>
                    <name>VMware: Private memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.private[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Amount of memory backed by host memory and not being shared.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>c6a539ee57bf48f78342358c391c65ea</uuid>
                    <name>VMware: Shared memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.shared[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of guest physical memory shared through transparent page sharing.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b064f0e0a53f4f6588827100becb4335</uuid>
                    <name>VMware: Swapped memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.swapped[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of guest physical memory swapped out to the VM's swap device by ESX.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e960399726a240de9ecc12eff65415ae</uuid>
                    <name>VMware: Guest memory usage</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.usage.guest[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of guest physical memory that is being used by the VM.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6fcbe4e95fce445aa417b9738004391f</uuid>
                    <name>VMware: Host memory usage</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size.usage.host[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of host physical memory allocated to the VM, accounting for saving from memory sharing with other VMs.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9533bc39366443fe8a3808190801441a</uuid>
                    <name>VMware: Memory size</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.size[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Total size of configured memory.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e82daa73e03e43b9838d9e414d710e38</uuid>
                    <name>VMware: Host memory usage in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.memory.usage[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Percentage of host physical memory that has been consumed.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0943ff346c9d4cc69fc773843066c473</uuid>
                    <name>VMware: Power state</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.powerstate[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The current power state of the virtual machine.</description>
                    <valuemap>
                        <name>VMware VirtualMachinePowerState</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>power</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>13173517c99e4a87aa6750392d14b255</uuid>
                    <name>VMware: Committed storage space</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.storage.committed[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Total storage space, in bytes, committed to this virtual machine across all datastores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>8183cf2c54774d7eb544f645d5c26b8c</uuid>
                    <name>VMware: Uncommitted storage space</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.storage.uncommitted[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Additional storage space, in bytes, potentially used by this virtual machine on all datastores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>35aa9ee1743e4c1787c426da20f48097</uuid>
                    <name>VMware: Unshared storage space</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.storage.unshared[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Total storage space, in bytes, occupied by the virtual machine across all datastores, that is not shared with any other virtual machine.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>4c3b010d7ea74da6b0dc1dd4e625bbb0</uuid>
                    <name>VMware: Uptime</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.uptime[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <history>7d</history>
                    <units>uptime</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>System uptime.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>914634668bab4266bd641ee224dbc1e4</uuid>
                    <name>Network device discovery</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.net.if.discovery[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of all network devices.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>1a7452a0061b45b1b1904e3ff64cf49f</uuid>
                            <name>VMware: Number of bytes received on interface {#IFDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.net.if.in[{$VMWARE.URL},{$VMWARE.VM.UUID},{#IFNAME},bps]</key>
                            <history>7d</history>
                            <units>Bps</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine network interface input statistics (bytes per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>interface</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>863c3aee5d9248d48adbf86832fa6c8e</uuid>
                            <name>VMware: Number of packets received on interface {#IFDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.net.if.in[{$VMWARE.URL},{$VMWARE.VM.UUID},{#IFNAME},pps]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine network interface input statistics (packets per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>interface</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>0993e42664a14cd7936351c55b1d64a4</uuid>
                            <name>VMware: Number of bytes transmitted on interface {#IFDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.net.if.out[{$VMWARE.URL},{$VMWARE.VM.UUID},{#IFNAME},bps]</key>
                            <history>7d</history>
                            <units>Bps</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine network interface output statistics (bytes per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>interface</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>144a2ed3f76e49af92462e0fea275ede</uuid>
                            <name>VMware: Number of packets transmitted on interface {#IFDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.net.if.out[{$VMWARE.URL},{$VMWARE.VM.UUID},{#IFNAME},pps]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine network interface output statistics (packets per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>interface</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>9c3cd13576cc4c0a8972fa188f911e96</uuid>
                            <name>VMware: Network utilization on interface {#IFDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.net.if.usage[{$VMWARE.URL},{$VMWARE.VM.UUID},{#IFNAME}]</key>
                            <history>7d</history>
                            <units>Bps</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine network utilization (combined transmit-rates and receive-rates) during the interval.</description>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>1024</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>interface</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>b1543bdfb5a342d7ad694c87248fe173</uuid>
                    <name>Disk device discovery</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.vfs.dev.discovery[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of all disk devices.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>a4886b1072314819aaf21183949c94bb</uuid>
                            <name>VMware: Average number of outstanding read requests to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.storage.readoio[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME}]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Average number of outstanding read requests to the virtual disk during the collection interval.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>172e4882d39f49d486ab5590163fdd4b</uuid>
                            <name>VMware: Average read latency to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.storage.totalreadlatency[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME}]</key>
                            <history>7d</history>
                            <units>!ms</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>The average time a read from the virtual disk takes.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>4fe54828be084b15bb92507106756a5f</uuid>
                            <name>VMware: Average write latency to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.storage.totalwritelatency[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME}]</key>
                            <history>7d</history>
                            <units>!ms</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>The average time a write to the virtual disk takes.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>a74614af101c404eb7ebec10319dca05</uuid>
                            <name>VMware: Average number of outstanding write requests to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.storage.writeoio[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME}]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Average number of outstanding write requests to the virtual disk during the collection interval.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>bd151efc8a0b41e9b64cbf21303fc659</uuid>
                            <name>VMware: Average number of bytes read from the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.dev.read[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME},bps]</key>
                            <history>7d</history>
                            <units>Bps</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine disk device read statistics (bytes per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e6248013150d4f23a0774f6cc80e8df3</uuid>
                            <name>VMware: Average number of reads from the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.dev.read[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME},ops]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine disk device read statistics (operations per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>7ea68380b855460b8e51281223659661</uuid>
                            <name>VMware: Average number of bytes written to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.dev.write[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME},bps]</key>
                            <history>7d</history>
                            <units>Bps</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine disk device write statistics (bytes per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>8344a1066f5c4ef49894d2d18fac2339</uuid>
                            <name>VMware: Average number of writes to the disk {#DISKDESC}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.dev.write[{$VMWARE.URL},{$VMWARE.VM.UUID},{#DISKNAME},ops]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine disk device write statistics (operations per second).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>disk</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DISKDESC}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>44ff9ef164dc4d20acf06b3368d64456</uuid>
                    <name>Mounted filesystem discovery</name>
                    <type>SIMPLE</type>
                    <key>vmware.vm.vfs.fs.discovery[{$VMWARE.URL},{$VMWARE.VM.UUID}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Discovery of all guest file systems.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>622e96310f9d4f54b4ed82f655fa153b</uuid>
                            <name>VMware: Free disk space on {#FSNAME}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.fs.size[{$VMWARE.URL},{$VMWARE.VM.UUID},{#FSNAME},free]</key>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine file system statistics (bytes).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>filesystem</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>3103537bb1d24633a064d173b3b530f2</uuid>
                            <name>VMware: Free disk space on {#FSNAME} (percentage)</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.fs.size[{$VMWARE.URL},{$VMWARE.VM.UUID},{#FSNAME},pfree]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine file system statistics (percentages).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>filesystem</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>08d05eac03994b56867ec302a346735c</uuid>
                            <name>VMware: Total disk space on {#FSNAME}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.fs.size[{$VMWARE.URL},{$VMWARE.VM.UUID},{#FSNAME},total]</key>
                            <delay>1h</delay>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine total disk space (bytes).</description>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1d</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>filesystem</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>09bb15da42464d8295d5e94b1d42cc87</uuid>
                            <name>VMware: Used disk space on {#FSNAME}</name>
                            <type>SIMPLE</type>
                            <key>vmware.vm.vfs.fs.size[{$VMWARE.URL},{$VMWARE.VM.UUID},{#FSNAME},used]</key>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware virtual machine used disk space (bytes).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>filesystem</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>software</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware-guest</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$VMWARE.PASSWORD}</macro>
                    <description>VMware service {$USERNAME} user password</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.URL}</macro>
                    <description>VMware service (vCenter or ESX hypervisor) SDK URL (https://servername/sdk)</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.USERNAME}</macro>
                    <description>VMware service user name</description>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>78f08f5c5c0047b999a2e8daa96cf8b7</uuid>
                    <name>VMware VirtualMachinePowerState</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>poweredOff</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>poweredOn</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>suspended</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
        <template>
            <uuid>5899b2f0aced4085b5ac25d0461b3425</uuid>
            <template>VMware Hypervisor</template>
            <name>VMware Hypervisor</name>
            <description>Template tooling version used: 0.41</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>3010cb082f23478b858912f944347530</uuid>
                    <name>VMware: Hypervisor ping</name>
                    <type>SIMPLE</type>
                    <key>icmpping[]</key>
                    <history>7d</history>
                    <description>Checks if the hypervisor is running and accepting ICMP pings.</description>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>application</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>health</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>ab84a61566a5402db59efd40d20714a5</uuid>
                            <expression>last(/VMware Hypervisor/icmpping[])=0</expression>
                            <name>VMware: Hypervisor is down</name>
                            <priority>AVERAGE</priority>
                            <description>The service is unavailable or does not accept ICMP ping.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>af4d0877fda84753816c817ad76162f1</uuid>
                    <name>VMware: Cluster name</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.cluster.name[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Cluster name of the guest VM.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cluster</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>c4ebd62118464e7a8d1945f80d70f8ae</uuid>
                    <name>VMware: CPU usage in percents</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.cpu.usage.perf[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>CPU usage as a percentage during the interval.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1bff6fbd300d4455a787a273d957bba3</uuid>
                    <name>VMware: CPU usage</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.cpu.usage[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <units>Hz</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Aggregated CPU usage across all cores on the host in Hz. This is only available if the host is connected.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>aad168c33cd14f76aa14ab5ca26498ec</uuid>
                    <name>VMware: CPU utilization</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.cpu.utilization[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>CPU usage as a percentage during the interval depends on power management or HT.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e4d27d7f9b9048d4ae6c60cbdd6c0091</uuid>
                    <name>VMware: Datacenter name</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.datacenter.name[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Datacenter name of the hypervisor.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>datacenter</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>5c29837f75f04d7f9a5786691b3dd991</uuid>
                    <name>VMware: Full name</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.fullname[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The complete product name, including the version information.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ad0053d57b834e6a9776c08e1c455d55</uuid>
                    <name>VMware: CPU frequency</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.cpu.freq[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <units>Hz</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The speed of the CPU cores. This is an average value if there are multiple speeds. The product of CPU frequency and number of cores is approximately equal to the sum of the MHz for all the individual cores on the host.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3f0c35fcef9e4699ac5a1c51d80f8da4</uuid>
                    <name>VMware: CPU model</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.cpu.model[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The CPU model.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>c99a5bf2e3904f97b3d361ca20af7883</uuid>
                    <name>VMware: CPU cores</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.cpu.num[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Number of physical CPU cores on the host. Physical CPU cores are the processors contained by a CPU package.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>89cb0a4809e7454a862f398a0e9d6bed</uuid>
                    <name>VMware: CPU threads</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.cpu.threads[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Number of physical CPU threads on the host.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ce89c38e6e5d4338a30ee150be1b2b67</uuid>
                    <name>VMware: Total memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.memory[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The physical memory size.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>7ed7ac26da384bcda976badf24ebbec1</uuid>
                    <name>VMware: Model</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.model[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The system model identification.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6c4aab55b3e640779a25ac90b9ca2a43</uuid>
                    <name>VMware: Bios UUID</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.uuid[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The hardware BIOS identification.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>aec06090d16d4bdd8ed3494b448f19d8</uuid>
                    <name>VMware: Vendor</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.hw.vendor[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The hardware vendor identification.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>21020a79436a49c38caf8941f6b68da3</uuid>
                    <name>VMware: Ballooned memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.memory.size.ballooned[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The amount of guest physical memory that is currently reclaimed through the balloon driver. Sum of all guest VMs.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>93d680d6886d446badbbe995ddd9ba9c</uuid>
                    <name>VMware: Used memory</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.memory.used[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Physical memory usage on the host.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>33f78ab6ee6c4e7585a83a60cdecab6f</uuid>
                    <name>VMware: Number of bytes received</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.network.in[{$VMWARE.URL},{$VMWARE.HV.UUID},bps]</key>
                    <history>7d</history>
                    <units>Bps</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware hypervisor network input statistics (bytes per second).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>network</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b013afcba08b47f4a5b590a59f464a58</uuid>
                    <name>VMware: Number of bytes transmitted</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.network.out[{$VMWARE.URL},{$VMWARE.HV.UUID},bps]</key>
                    <history>7d</history>
                    <units>Bps</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>VMware hypervisor network output statistics (bytes per second).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>network</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e4116d7c7e234c5ebd5784f42ade1f2e</uuid>
                    <name>VMware: Power usage maximum allowed</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.power[{$VMWARE.URL},{$VMWARE.HV.UUID},max]</key>
                    <history>7d</history>
                    <units>!W</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Maximum allowed power usage.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>6h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>power</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>179a981cf30f4f77869e3b50dc2bc333</uuid>
                    <name>VMware: Power usage</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.power[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <units>!W</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Current power usage.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>power</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3c9d6ffb53624758ad888bf70f69218c</uuid>
                    <name>VMware: Get sensors</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.sensors.get[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Master item for sensors data.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>raw</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0cec294521314c5482233b5b96e90c8d</uuid>
                    <name>VMware: Overall status</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>The overall alarm status of the host: gray - unknown, green - ok, red - it has a problem, yellow - it might have a problem.</description>
                    <valuemap>
                        <name>VMware status</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>health</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>378511e0f1794874a68aef1b43561ee5</uuid>
                            <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=3</expression>
                            <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                            <priority>HIGH</priority>
                            <description>One or more components in the appliance might be in an unusable status and the appliance might become unresponsive soon. Security patches might be available.</description>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                        <trigger>
                            <uuid>ef6ca4d7033c4c8cb963eb7d493b3c7b</uuid>
                            <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=2</expression>
                            <name>VMware: The {$VMWARE.HV.UUID} health is Yellow</name>
                            <priority>AVERAGE</priority>
                            <description>One or more components in the appliance might become overloaded soon.</description>
                            <dependencies>
                                <dependency>
                                    <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                                    <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=3</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>ecad96137494476293b57a0440de3f65</uuid>
                    <name>VMware: Uptime</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.uptime[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <history>7d</history>
                    <units>uptime</units>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>System uptime.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>01d316b0a8cf4998b344f0c4ef1daa32</uuid>
                            <expression>last(/VMware Hypervisor/vmware.hv.uptime[{$VMWARE.URL},{$VMWARE.HV.UUID}])&lt;10m</expression>
                            <name>VMware: Hypervisor has been restarted</name>
                            <event_name>VMware: Hypervisor has been restarted (uptime &lt; 10m)</event_name>
                            <priority>WARNING</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>222ad20887cf479b8e81a4c338078d17</uuid>
                    <name>VMware: Version</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.version[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Dot-separated version string.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>2045df572e864834bd4bd97046353f4e</uuid>
                    <name>VMware: Number of guest VMs</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.vm.num[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <description>Number of guest virtual machines.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>fb7774df87994355baff7402d9fabcc2</uuid>
                    <name>Datastore discovery</name>
                    <type>SIMPLE</type>
                    <key>vmware.hv.datastore.discovery[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    <delay>1h</delay>
                    <username>{$VMWARE.USERNAME}</username>
                    <password>{$VMWARE.PASSWORD}</password>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>65e6c165c3674953b2845d4101a9a6bf</uuid>
                            <name>VMware: Multipath count for datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.hv.datastore.multipath[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE}]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Number of available datastore paths.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>8f1de4827ba446ef902ca5fa44109c6d</uuid>
                                    <expression>last(/VMware Hypervisor/vmware.hv.datastore.multipath[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE}],#1)&lt;&gt;last(/VMware Hypervisor/vmware.hv.datastore.multipath[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE}],#2) and last(/VMware Hypervisor/vmware.hv.datastore.multipath[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE}])&lt;{#MULTIPATH.COUNT}</expression>
                                    <name>VMware: The multipath count has been changed</name>
                                    <opdata>Current: {ITEM.LASTVALUE}, Registered: {#MULTIPATH.COUNT}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>The number of available datastore paths less than registered ({#MULTIPATH.COUNT}).</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>notice</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>259d1ff4bde143248f7ee2f7f880cb62</uuid>
                            <name>VMware: Average read latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.hv.datastore.read[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Average amount of time for a read operation from the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>f36245398cc4460a9cb4ec741612693b</uuid>
                            <name>VMware: Free space on datastore {#DATASTORE} (percentage)</name>
                            <type>SIMPLE</type>
                            <key>vmware.hv.datastore.size[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE},pfree]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in percentage from total.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cc83e8f5ec08483db75482706bf01aba</uuid>
                            <name>VMware: Total size of datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.hv.datastore.size[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE}]</key>
                            <delay>5m</delay>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>VMware datastore space in bytes.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>9db980d8f5f44af5ad11a5949d80031d</uuid>
                            <name>VMware: Average write latency of the datastore {#DATASTORE}</name>
                            <type>SIMPLE</type>
                            <key>vmware.hv.datastore.write[{$VMWARE.URL},{$VMWARE.HV.UUID},{#DATASTORE},latency]</key>
                            <history>7d</history>
                            <username>{$VMWARE.USERNAME}</username>
                            <password>{$VMWARE.PASSWORD}</password>
                            <description>Average amount of time for a write operation to the datastore (milliseconds).</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>datastore</value>
                                </tag>
                                <tag>
                                    <tag>datastore</tag>
                                    <value>{#DATASTORE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>deb31adf69634837839e2d8f87167f28</uuid>
                    <name>Healthcheck discovery</name>
                    <type>DEPENDENT</type>
                    <key>vmware.hv.healthcheck.discovery</key>
                    <delay>0</delay>
                    <description>VMware Rollup Health State sensor discovery</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>fabb7524dd454daa942266e5565ce40e</uuid>
                            <name>VMware: Health state rollup</name>
                            <type>DEPENDENT</type>
                            <key>vmware.hv.sensor.health.state[{#SINGLETON}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>The host health state rollup sensor value: gray - unknown, green - ok, red - it has a problem, yellow - it might have a problem.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$..HostNumericSensorInfo[?(@.name=="VMware Rollup Health State")].healthState.label.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vmware.hv.sensors.get[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>health</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>9f2a65161946436986aacf6c9a637673</uuid>
                                    <expression>last(/VMware Hypervisor/vmware.hv.sensor.health.state[{#SINGLETON}])="Red"</expression>
                                    <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                                    <priority>HIGH</priority>
                                    <description>One or more components in the appliance might be in an unusable status and the appliance might become unresponsive soon. Security patches might be available.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                                            <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=3</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>dc4f84eb8d2143bb80999fbc58f38928</uuid>
                                    <expression>last(/VMware Hypervisor/vmware.hv.sensor.health.state[{#SINGLETON}])="Yellow"</expression>
                                    <name>VMware: The {$VMWARE.HV.UUID} health is Yellow</name>
                                    <priority>AVERAGE</priority>
                                    <description>One or more components in the appliance might become overloaded soon.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                                            <expression>last(/VMware Hypervisor/vmware.hv.sensor.health.state[{#SINGLETON}])="Red"</expression>
                                        </dependency>
                                        <dependency>
                                            <name>VMware: The {$VMWARE.HV.UUID} health is Red</name>
                                            <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=3</expression>
                                        </dependency>
                                        <dependency>
                                            <name>VMware: The {$VMWARE.HV.UUID} health is Yellow</name>
                                            <expression>last(/VMware Hypervisor/vmware.hv.status[{$VMWARE.URL},{$VMWARE.HV.UUID}])=2</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>vmware.hv.sensors.get[{$VMWARE.URL},{$VMWARE.HV.UUID}]</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$..HostNumericSensorInfo[?(@.name=="VMware Rollup Health State")]</parameter>
                            </parameters>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>[]</error_handler_params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return JSON.stringify(value != "[]" ? [{'{#SINGLETON}': ''}] : []);</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>6h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>software</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware-hypervisor</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$VMWARE.PASSWORD}</macro>
                    <description>VMware service {$USERNAME} user password</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.URL}</macro>
                    <description>VMware service (vCenter or ESX hypervisor) SDK URL (https://servername/sdk)</description>
                </macro>
                <macro>
                    <macro>{$VMWARE.USERNAME}</macro>
                    <description>VMware service user name</description>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>25d04e2838af4fcca9ddd21df6781497</uuid>
                    <name>Service state</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>Down</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>Up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>2b324fd8d7624874a3a81449b62c2cd6</uuid>
                    <name>VMware status</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>gray</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>green</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>yellow</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>red</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
        <template>
            <uuid>e1ca624566424496bff9d90c261ab37b</uuid>
            <template>VMWare SD-WAN VeloCloud by HTTP</template>
            <name>VMWare SD-WAN VeloCloud by HTTP</name>
            <description>Template for monitoring VMWare SD-WAN VeloCloud https://www.vmware.com/products/sd-wan.html

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description>
            <groups>
                <group>
                    <name>Templates/Network devices</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>3d96f6e755934bc8a4ee7300a165adae</uuid>
                    <name>Velocloud: Get data</name>
                    <type>SCRIPT</type>
                    <key>velocloud.get</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <params>var params = JSON.parse(value);

var request = new HttpRequest();

request.addHeader('Content-Type: application/json');
request.addHeader('Authorization: Token ' + params.token);

var response,
    output,
    error_msg = '',
    enterprises = [],
    edges = [],
    links = [],
    gateways = [],
    version = [],
    apps = [],
    appsLinks = [],
    edgeSDWan = [],
    edgeSDWanPath = [];

function getHttpData(url, body) {
    response = request.post(url, body);
    Zabbix.log(4, '[ SD-WAN API ] [ ' + url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);

    if (response !== null) {
        try {
            response = JSON.parse(response);
        }
        catch (error) {
            throw 'Failed to parse response received from SD-WAN API. Check debug log for more information.';
        }
    }

    if (request.getStatus() !== 200) {
        if (response.error &amp;&amp; response.error.message) {
            throw response.error.message;
        } else {
            throw 'Failed to receive data: invalid response status code.';
        }
    }

    if (typeof (response) !== 'object' || response === null) {
        throw 'Cannot process response data: received data is not an object.';
    }

    return response;
};

try {

    if (params.token === '{' + '$VELOCLOUD.TOKEN}') {
        throw 'Please change {' + '$VELOCLOUD.TOKEN} macro with the proper value.';
    }

    if (params.url.indexOf('http://') === -1 &amp;&amp; params.url.indexOf('https://') === -1) {
        params.url = 'https://' + params.url;
    }

    if (!params.url.endsWith('/')) {
        params.url += '/';
    }

    enterprises = getHttpData(params.url + 'portal/rest/monitoring/getAggregates', '{}').enterprises;

    if (!Array.isArray(enterprises)) {
        throw 'Cannot process edges: enterprises is not an array.';
    }

    links = getHttpData(params.url + 'portal/rest/monitoring/getAggregateEdgeLinkMetrics', '{}');
    gateways = getHttpData(params.url + 'portal/rest/network/getNetworkGateways', JSON.stringify({ with: ['site'] }));
    version = getHttpData(params.url + 'portal/rest/system/getVersionInfo', '{}');

    for (var i in enterprises) {
        responseEdges = getHttpData(params.url + 'portal/rest/enterprise/getEnterpriseEdges', JSON.stringify({ enterpriseId: enterprises[i].id, with: ['site'] }));
        edges = edges.concat(responseEdges);
    }

    if (!Array.isArray(edges)) {
        throw 'Cannot process edges SDWans: edges is not an array.';
    }

    for (var i in edges) {
        responseEdgeSDWan = getHttpData(params.url + 'portal/rest/edge/getEdgeSDWANPeers', JSON.stringify({ enterpriseId: edges[i].enterpriseId, edgeId: edges[i].id }));

        if (!Array.isArray(responseEdgeSDWan)) {
            throw 'Cannot process edges SDWan Path: edges SDWans is not an array.';
        }

        for (var e in responseEdgeSDWan) {
            data = {
                'enterpriseId': edges[i].enterpriseId,
                'edgeId': edges[i].id,
                'peerLogicalId': responseEdgeSDWan[e].deviceLogicalId
            };
            responseEdgeSDWanPath = getHttpData(params.url + 'portal/rest/metrics/getEdgeSDWANPeerPathMetrics', JSON.stringify(data));
            edgeSDWanPath = edgeSDWanPath.concat(responseEdgeSDWanPath);

            responseEdgeSDWan[e].edgeId = edges[i].id;
            responseEdgeSDWan[e].edgeName = edges[i].name;
            responseEdgeSDWan[e].enterpriseId = edges[i].enterpriseId;
        }

        edgeSDWan = edgeSDWan.concat(responseEdgeSDWan);
    }

} catch (error) {
    error_msg = error;
};

return JSON.stringify({
    'enterprises': enterprises,
    'edges': edges,
    'links': links,
    'gateways': gateways,
    'edgeSDWan': edgeSDWan,
    'edgeSDWanPath': edgeSDWanPath,
    'info': version,
    'error': error_msg.toString()
});</params>
                    <description>The JSON with result of Velocloud API requests.</description>
                    <timeout>10s</timeout>
                    <parameters>
                        <parameter>
                            <name>token</name>
                            <value>{$VELOCLOUD.TOKEN}</value>
                        </parameter>
                        <parameter>
                            <name>url</name>
                            <value>{$VELOCLOUD.URL}</value>
                        </parameter>
                    </parameters>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>raw</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9df4ba5324d94d0fb54d3231311016a6</uuid>
                    <name>Velocloud: Clear data</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.get.clear_metrics</key>
                    <delay>0</delay>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Clear metrics for data without errors.</description>
                    <preprocessing>
                        <step>
                            <type>CHECK_JSON_ERROR</type>
                            <parameters>
                                <parameter>$.error</parameter>
                            </parameters>
                            <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>velocloud.get</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>orchestrator</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>8a54309d8abc4fc7816b168329243de4</uuid>
                    <name>Velocloud: Get data collection errors</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.get.error</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Errors of aggregate script item.</description>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.error</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>velocloud.get</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>application</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>a0623655a2fa4f60962ad560b8bb5a13</uuid>
                            <expression>length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.get.error))&gt;0</expression>
                            <name>Velocloud: There are errors in aggregate script item</name>
                            <priority>WARNING</priority>
                            <description>There are errors in aggregate script item.</description>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>3f589e2191c5419fb89cc33639595ae9</uuid>
                    <name>Velocloud: Orchestrator API version</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.orchestrator.api_version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Version of VMware SD-WAN Orchestrator API.</description>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.info.apiVersion</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>orchestrator</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>5a95d9c614e74c2c8b6181fc8dff2226</uuid>
                            <expression>nodata(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.api_version,30m)=1</expression>
                            <name>Velocloud: Failed to fetch aggregate data</name>
                            <event_name>Velocloud: Failed to fetch aggregate data (or no data for 30m)</event_name>
                            <priority>AVERAGE</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>ab24d8fc4c2a4130bca1b4b6d4f311ae</uuid>
                    <name>Velocloud: Orchestrator build</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.orchestrator.build</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Build of VMware SD-WAN Orchestrator API.</description>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.info.build</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>orchestrator</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>37c16b3cbd8b4680ab85a1fea819611f</uuid>
                            <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build,#2) and length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build))&gt;0</expression>
                            <name>Velocloud: Orchestrator build has been changed</name>
                            <priority>INFO</priority>
                            <description>Velocloud Orchestrator build has been changed.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>1f60b61051494ab495de4dfe2cd83450</uuid>
                    <name>Velocloud: Orchestrator version</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.orchestrator.version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Version of VMware SD-WAN Orchestrator API.</description>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.info.version</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>orchestrator</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>a1d8e4d61a804c8fb11b33f590f0885c</uuid>
                            <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version,#2) and length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version))&gt;0</expression>
                            <name>Velocloud: Orchestrator version has been changed</name>
                            <priority>INFO</priority>
                            <description>Velocloud Orchestrator version has been changed.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>1206789df5b44af7ba1c5416662344dd</uuid>
                    <name>Velocloud: System properties</name>
                    <type>HTTP_AGENT</type>
                    <key>velocloud.system.properties</key>
                    <delay>6h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>System properties of VMware SD-WAN.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <url>https://{$VELOCLOUD.URL}/portal/rest/systemProperty/getSystemProperties</url>
                    <posts>{ "normalize": true }</posts>
                    <headers>
                        <header>
                            <name>Content-Type</name>
                            <value>application/json</value>
                        </header>
                        <header>
                            <name>Authorization</name>
                            <value>Token {$VELOCLOUD.TOKEN}</value>
                        </header>
                    </headers>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>application</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>58541dfe798843fa822276e84a32b919</uuid>
                            <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.system.properties,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.system.properties,#2)</expression>
                            <name>Velocloud: System properties have changed</name>
                            <priority>INFO</priority>
                            <description>System properties have changed.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>522ba6551cc64094b60a136d07c9921d</uuid>
                    <name>Edges metrics discovery</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.edges.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$VELOCLOUD.LLD.EDGES.FILTER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$VELOCLOUD.LLD.EDGES.FILTER.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Metrics for edges statistics.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>79aa9ebb1ce64944a78a7c8d7603f53b</uuid>
                            <name>Edge [{#NAME}]: Activation state</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.activation[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Edge activation state.</description>
                            <valuemap>
                                <name>Edge activation state</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].activationState.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>switch (value) {
    case 'PENDING':
        return 0
    case 'ACTIVATED':
        return 1
    default:
        return 10
}</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cecb2a3698704c4c89ef12eb3bb39222</uuid>
                            <name>Edge [{#NAME}]: Description</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.description[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Edge description.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].description.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>12h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>490afb422d0f457595343d49536470b7</uuid>
                            <name>Edge [{#NAME}]: HA state</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.ha_state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Edge high availability state.</description>
                            <valuemap>
                                <name>Edge HA status</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].haState.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>switch (value) {
    case 'UNCONFIGURED':
        return 0
    case 'READY':
        return 1
    case 'PENDING_INIT':
        return 2
    case 'FAILED':
        return 3
    default:
        return 10
}</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>075d35e3ed074b9daf01864b111945c7</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.ha_state[{#ID}])=3</expression>
                                    <name>Edge [{#NAME}]: HA state is in "FAILED" state</name>
                                    <priority>WARNING</priority>
                                    <description>High availability state is "FAILED".</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>fdb55947147249109da453009d6bd443</uuid>
                            <name>Edge [{#NAME}]: Model number</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.model[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Edge model number.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].modelNumber.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>12h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>0af44b485ae54de49a0385923c897bee</uuid>
                            <name>Edge [{#NAME}]: Service uptime</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.service_uptime[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>uptime</units>
                            <description>Edge service uptime.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].serviceUpSince.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e12fe7584fbd40268e7c16ed044aa4db</uuid>
                            <name>Edge [{#NAME}]: Software version</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.software_version[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Edge software version.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].softwareVersion.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>12h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>74b49eac72574daab1b727045be118ca</uuid>
                            <name>Edge [{#NAME}]: State</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Edge state.</description>
                            <valuemap>
                                <name>Edge states</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].edgeState.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>switch (value) {
    case 'OFFLINE':
        return 0
    case 'CONNECTED':
        return 1
    case 'NEVER_ACTIVATED':
        return 2
    default:
        return 10
}</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>962d2d0c6f124424b2e5a7aca89d293f</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.state[{#ID}])=0</expression>
                                    <name>Edge [{#NAME}]: Edge is in "OFFLINE" state</name>
                                    <priority>WARNING</priority>
                                    <description>Edge state is "OFFLINE".</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>a86c1fa26d4d4481bdfb099338c27989</uuid>
                            <name>Edge [{#NAME}]: System uptime</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.edge.system_uptime[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>uptime</units>
                            <description>Edge system uptime.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edges[?(@.id=='{#ID}')].systemUpSince.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>edge</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>156d96052fd54606828cc53484794bb2</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.system_uptime[{#ID}])&gt;0 and last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.system_uptime[{#ID}])&lt;600</expression>
                                    <name>Edge [{#NAME}]: Edge has been restarted</name>
                                    <event_name>Edge [{#NAME}]: Edge has been restarted (uptime &lt; 10m)</event_name>
                                    <priority>WARNING</priority>
                                    <description>Edge was restarted.</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>notice</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#CITY}</lld_macro>
                            <path>$.site.city</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.id</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STATE}</lld_macro>
                            <path>$.site.state</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.edges</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>e2879e0ce6e44203b0615c36ba626cc0</uuid>
                    <name>Gateways metrics discovery</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.gateways.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$VELOCLOUD.LLD.GATEWAYS.FILTER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>{$VELOCLOUD.LLD.GATEWAYS.FILTER.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Metrics for gateways statistics.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>52859166849d4cdf860664f8d3b8088d</uuid>
                            <name>Gateway [{#NAME}]: Connected edges</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.connected_edges[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Gateway connected edges.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].connectedEdges.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>f0d7bdb2ac3540258ab6a276b43a382c</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.connected_edges[{#ID}],#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.connected_edges[{#ID}],#2)</expression>
                                    <name>Gateway [{#NAME}]: The number of connected edges is changed</name>
                                    <priority>WARNING</priority>
                                    <description>The number of connected edges is changed.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>notice</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5e588efb83be4dc2bc29eaa0a6630718</uuid>
                            <name>Gateway [{#NAME}]: Description</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.description[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Gateway description.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].description.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>12h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>7f2a0a68386744cb84fab35df8c55a07</uuid>
                            <name>Gateway [{#NAME}]: IP address</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.ip_address[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Gateway ip address.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].ipAddress.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b304460854f0485189f88df12483b5ac</uuid>
                            <name>Gateway [{#NAME}]: Service uptime</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.service_uptime[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>uptime</units>
                            <description>Gateway service uptime.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].serviceUpSince.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>91784583eda943a7ace430413450391c</uuid>
                            <name>Gateway [{#NAME}]: State</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Gateway state.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].gatewayState.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>d902600ef51640ffaaa4384ce505bcc2</uuid>
                            <name>Gateway [{#NAME}]: System uptime</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.system_uptime[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>uptime</units>
                            <description>Gateway system uptime.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].systemUpSince.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>e51ea2da27284067bd3ec8fa4faffdde</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.system_uptime[{#ID}])&gt;0 and last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.system_uptime[{#ID}])&lt;600</expression>
                                    <name>Gateway [{#NAME}]: Gateway has been restarted</name>
                                    <event_name>Gateway [{#NAME}]: Gateway has been restarted (uptime &lt; 10m)</event_name>
                                    <priority>WARNING</priority>
                                    <description>Gateway was restarted.</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>notice</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>66c8fe8095724fb38966b05ef5d77a37</uuid>
                            <name>Gateway [{#NAME}]: Utilization CPU</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.utilization.cpu[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Gateway CPU utilization.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].utilizationDetail.cpu.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>cpu</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b510c38771464024a66dc20ce9d75505</uuid>
                            <name>Gateway [{#NAME}]: Utilization load</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.utilization.load[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Gateway load.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].utilizationDetail.load.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>ad83565ae40f480dacd56e63bd475ddc</uuid>
                            <name>Gateway [{#NAME}]: Utilization memory</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.utilization.memory[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Gateway memory utilization.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].utilizationDetail.memory.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>memory</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b10c51350f604a8195e9c0176ca2de85</uuid>
                            <name>Gateway [{#NAME}]: Utilization overall</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.gateway.utilization.overall[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Gateway overall utilization.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.gateways[?(@.id=='{#ID}')].utilizationDetail.overall.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>city</tag>
                                    <value>{#CITY}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>gateway</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>state</tag>
                                    <value>{#STATE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>d8d9b176f439436ba6fe69ec8bc6409e</uuid>
                            <name>Gateway [{#NAME}]: Utilization</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.gateway.utilization.cpu[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.gateway.utilization.load[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.gateway.utilization.memory[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.gateway.utilization.overall[{#ID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#CITY}</lld_macro>
                            <path>$.site.city</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.id</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#STATE}</lld_macro>
                            <path>$.site.state</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.gateways</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>b951193feec6495cbd446f6d5097a868</uuid>
                    <name>Links metrics discovery</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.links.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#ID}</macro>
                                <value>{$VELOCLOUD.LLD.LINKS.FILTER.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#ID}</macro>
                                <value>{$VELOCLOUD.LLD.LINKS.FILTER.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Metrics for links statistics.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>6b3351b9187d47ba804e5fcd8c6f474f</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Best loss rx, %</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.best_loss_rx.pct[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <description>Link receive best loss.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].bestLossPctRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>897c9055d51a4e75ba7bae1160c7303e</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Best loss tx, %</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.best_loss_tx.pct[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <description>Link transmit best loss.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].bestLossPctTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5602191f2e0f4cb2b2340a4cfc77cfc7</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Bytes in</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.bytes_rx[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Link received bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].bytesRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>758b71f1692c46a8bb0611566b00031b</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Bytes out</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.bytes_tx[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Link transmitted bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].bytesTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>3320d368036b460091b3f20e3c5cebd9</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Last active</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.last_active[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>s</units>
                            <description>Link last active in seconds ago.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].link.linkLastActive.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>return Math.round((Date.now() - new Date(value).valueOf()) / 1000)</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cf66e401adc6432e8052baf0128d6877</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Packets in</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.packets_rx[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Link received packets.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId== '{#ID}')].packetsRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>152d25185f3e4e8b80ffea7d8ba25775</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Packets out</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.packets_tx[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Link transmitted packets.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].packetsTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>b1d5964d030841e28a8b9e80c8152e7a</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: State</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.state[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Link state.</description>
                            <valuemap>
                                <name>Link states</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].link.linkState.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>switch (value) {
    case 'UNSTABLE':
        return 0
    case 'STABLE':
        return 1
    case 'DISCONNECTED':
        return 2
    default:
        return 10
}</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>abceaab09aea4cb482dc4b554502429b</uuid>
                                    <expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.link.state[{#ID}])&lt;&gt;1</expression>
                                    <name>Link [{#NAME}]:[{#IP}]: Link state is not "STABLE"</name>
                                    <priority>WARNING</priority>
                                    <description>Link state is not "STABLE".</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>43deb16e85644937a182b01eadb875d0</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Total bytes</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.total_bytes[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Link Total bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].totalBytes.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>622408bd703040339d1b4bdebed3280e</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Total packets</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.link.total_packets[{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Link total packets.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.links[?(@.linkId=='{#ID}')].totalPackets.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>link</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>enterprise</tag>
                                    <value>{#ENTERPRISE}</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IF}</value>
                                </tag>
                                <tag>
                                    <tag>ip</tag>
                                    <value>{#IP}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>d117ffc6c5f245099209ca3a471cc63f</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Best loss</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.best_loss_rx.pct[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.best_loss_tx.pct[{#ID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>951febf02caa4d4aa1417f8b8d11d89c</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Bytes summary</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.bytes_rx[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.bytes_tx[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.total_bytes[{#ID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>c656365e5c77496fac4c0a7d80d6cfd3</uuid>
                            <name>Link [{#NAME}]:[{#IP}]: Packets summary</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.packets_rx[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.packets_tx[{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.link.total_packets[{#ID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#EDGE}</lld_macro>
                            <path>$.link.edgeName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ENTERPRISE}</lld_macro>
                            <path>$.link.enterpriseName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.link.linkId</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#IF}</lld_macro>
                            <path>$.link.interface</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#IP}</lld_macro>
                            <path>$.link.linkIpAddress</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.link.displayName</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.links</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>23ae8832dee54e7087b8c4d3c970a9ea</uuid>
                    <name>SDWAN peers path metrics discovery</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.sdwanpath.discovery</key>
                    <delay>0</delay>
                    <description>Metrics for SDWAN peers path.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>2fafb7d1b4c1429381f2f46c60dafa28</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes in</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.bytes_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Bytes received of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.bytesRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>2fa176affa6b46ffae3682ea7cb96866</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes out</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.bytes_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Bytes transmitted of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.bytesTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cf8f3d0c61994e49b493d79160da27bf</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packets in</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.packets_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Packets received of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.packetsRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>49fc4e85c5a5415793fc89f2c3cdec8f</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packets out</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.packets_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Packets transmitted of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.packetsTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>98a0c2c3a3be47e9bd32cf719069cad2</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packet Loss in</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.packet_loss_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Received packet loss of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.packetLossRx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>0f2ef8113a3644feae7b827675362485</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packet Loss out</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.packet_loss_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Transmitted packet loss of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.packetLossTx.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>3a7ed14c13874c3088f28253a25a0c10</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes total</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.total_bytes[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>B</units>
                            <description>Total bytes of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.totalBytes.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>1f7bbdd7c1e24429878538b3b6bbddc4</uuid>
                            <name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Total packets</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpath.total_packets[{#NAME}/{#SOURCE}/{#DESTINATION}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>!packets</units>
                            <description>Total packets of SDWAN peer path.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].metrics.totalPackets.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-path</value>
                                </tag>
                                <tag>
                                    <tag>destination</tag>
                                    <value>{#DESTINATION}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>source</tag>
                                    <value>{#SOURCE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#DESTINATION}</lld_macro>
                            <path>$.destination.deviceName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.source.linkName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SOURCE}</lld_macro>
                            <path>$.source.deviceName</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.edgeSDWanPath</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>5695baeff9f64b9b8850dbc6f98566ef</uuid>
                    <name>SDWAN peers metrics discovery</name>
                    <type>DEPENDENT</type>
                    <key>velocloud.sdwanpeers.discovery</key>
                    <delay>0</delay>
                    <description>Metrics for SDWAN peers.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>25f6dc87f6014502a5eeb36ed3ddd7ed</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Dead path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.dead_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of dead path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.dead.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>08fb5b9cf8464e4382224515ba75953d</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Description</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.description[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Description of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].description.first()</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>12h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>ece78f083d55413ab82a33f03c0204ef</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Stable path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.stable_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of stable path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.stable.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>3884e4bf4e8a46508c04a6cd06ae1513</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Standby path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.standby_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of standby path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.standby.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>39389b7b594e4b5da678ff985da0ba2a</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Total path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.total_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of total path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.total.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>474e118fa98340f68c73f4ddc5f54f5e</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Unknown path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.unknown_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of unknown path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.unknown.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>4e93b5e2f88747b093aba97d94d433f2</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Unstable path</name>
                            <type>DEPENDENT</type>
                            <key>velocloud.sdwanpeer.unstable_path[{#EDGE.ID}/{#ID}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Count of unstable path of SDWAN peer.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].pathStatusCount.unstable.first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>velocloud.get.clear_metrics</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>sdwan-peer</value>
                                </tag>
                                <tag>
                                    <tag>edge</tag>
                                    <value>{#EDGE}</value>
                                </tag>
                                <tag>
                                    <tag>name</tag>
                                    <value>{#NAME}</value>
                                </tag>
                                <tag>
                                    <tag>type</tag>
                                    <value>{#TYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>36438b5369794ea8a9147ec7675bc1a6</uuid>
                            <name>SDWAN Peer [{#NAME}]:[{#TYPE}]: {#EDGE.ID}: Path overview</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.sdwanpeer.stable_path[{#EDGE.ID}/{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.sdwanpeer.dead_path[{#EDGE.ID}/{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.sdwanpeer.standby_path[{#EDGE.ID}/{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.sdwanpeer.unknown_path[{#EDGE.ID}/{#ID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>VMWare SD-WAN VeloCloud by HTTP</host>
                                        <key>velocloud.sdwanpeer.unstable_path[{#EDGE.ID}/{#ID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>velocloud.get.clear_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#EDGE.ID}</lld_macro>
                            <path>$.edgeId</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#EDGE}</lld_macro>
                            <path>$.edgeName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ID}</lld_macro>
                            <path>$.deviceLogicalId</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.peerName</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#TYPE}</lld_macro>
                            <path>$.peerType</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.edgeSDWan</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>network</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>vmware-sd-wan-velocloud</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$VELOCLOUD.LLD.EDGES.FILTER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter for discoverable edges.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.LLD.EDGES.FILTER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered edges.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.LLD.GATEWAYS.FILTER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter for discoverable gateways.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.LLD.GATEWAYS.FILTER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered gateways.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.LLD.LINKS.FILTER.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter for discoverable links.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.LLD.LINKS.FILTER.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered links.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.TOKEN}</macro>
                    <description>VMware SD-WAN Orchestrator API Token.</description>
                </macro>
                <macro>
                    <macro>{$VELOCLOUD.URL}</macro>
                    <description>VMware SD-WAN Orchestrator URL. e.g vco.velocloud.net.</description>
                </macro>
            </macros>
            <valuemaps>
                <valuemap>
                    <uuid>6ac13cd1206145919ae7c9776ef5e76b</uuid>
                    <name>Edge activation state</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>PENDING</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>ACTIVATED</newvalue>
                        </mapping>
                        <mapping>
                            <value>10</value>
                            <newvalue>UNKNOWN</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>cd8d83dc329144d9925a5c52db95df96</uuid>
                    <name>Edge HA status</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>UNCONFIGURED</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>READY</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>PENDING_INIT</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>FAILED</newvalue>
                        </mapping>
                        <mapping>
                            <value>10</value>
                            <newvalue>UNKNOWN</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>87f150cd23e14448b35980b546dc2cd8</uuid>
                    <name>Edge states</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>OFFLINE</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>CONNECTED</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>NEVER_ACTIVATED</newvalue>
                        </mapping>
                        <mapping>
                            <value>10</value>
                            <newvalue>UNKNOWN</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>249b93828946422c9ef8870a915661ca</uuid>
                    <name>Link states</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>UNSTABLE</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>STABLE</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>DISCONNECTED</newvalue>
                        </mapping>
                        <mapping>
                            <value>10</value>
                            <newvalue>UNKNOWN</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
    </templates>
</zabbix_export>